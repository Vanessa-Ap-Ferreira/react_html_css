/* Seletor Global (aplica a regra em todos os elementos) */

* {
  margin: 0;
  padding: 0;
  /* quando utilizado box-sizing ele irá respeitar o tamanho definido em width ou height
   e não somará os valores definidos para borda, portanto o valor total será o definido em width e height */
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  color: #444;
  border-top: 10px solid #1098ab;
  position: relative;
}

/* container após o body para demilitar largura e centralizar página */
.container {
  width: 1200px;
  margin: 0 auto;
}

.main-header {
  background-color: #f7f7f7;
  padding: 20px 40px;
  /* margin-bottom: 60px; */
}

nav {
  font-size: 18px;
  text-align: center;
}

article {
  /* margin-bottom: 60px; */
}

.post-header {
  margin-bottom: 40px;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ab;
  border-bottom: 5px solid #1098ab;
  padding: 50px 40px;
}

h1,
h2,
h3 {
  color: #1098ab;
}

h1 {
  font-size: 26px;
  font-style: italic;
  text-transform: uppercase;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 30px;
}

p {
  font-size: 22px;
  /* espaçamento entre as linhas */
  line-height: 1.5; 
  margin-bottom: 15px;
}

ul, 
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 16px;
  margin-bottom: 10px;
  /* display: inline; */
}

li:last-child {
  margin-bottom: 0;
}

footer p {
  font-size: 16px;
}

#author {
  font-size: 16px;
  font-style: italic;
}

.copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related {
  /* retira os marcadores de lista */
  list-style: none;
  margin-left: 0;
}

/* .first-li {
  font-weight: bold;
} */

li:first-child {
  /* pseudo class: irá selecionar o primeiro filho do elemento li, 
  sem a necessidade de utilizar class */
  font-weight: bold;
}

li:last-child {
  /* o ultimo elemento da lista ficará em italico */
  font-style: italic;
}

/* li:nth-child(2) {
  pode selecionar um elemento dizendo em qual posição ele está,
  neste caso o 2 elemento da lista será vermelho
  color: red;
} */

/* li:nth-child(odd) {
  seleciona todos os elementos que estão na posição ímpar
  color: red;
} */

/* li:nth-child(even) {
  seleciona todos os elementos que estão na posição par
  color: red;
} */


/* style link: seguir sempre está sequência de código 
    1 - link
    2 - visited
    3 - hover
    4 - active
 */


/* usando a propriedade link ele apenas irá pegar âncora que possui de fato um atributo de link
    neste caso o texto ficará azul sem o sublinhado
*/
a:link {
  color:#1098ab;
  text-decoration: none;
}

a:visited {
  color:#1098ab;
}

/* quando o mouse estiver sobre o link ele irá mudar para este estilo */
a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

/* quando o link for clicado ele ficará com este estilo */
a:active {
  background-color: black;
  font-style: italic;
}

/* prioridade para aplicar style
1 - ID;
2 - Class (se tiver dois com a mesma definição, irá predominar o nome da última class no HTML)
  ex: class="text font copyright" e nas 3 class é definido color, o style será do atribuido ao copyright;
3 - elemento
****** seguindo está ordem se vc quer que o style seja o que tem o menor valor relevância sobre os demais
****** coloque na frente do style que deve ser !important
*/


.post-img {
  width: 100%;
  height: auto;
}

nav a:link {
  /* background-color: orangered;
  margin: 20px;
  padding: 20px;

  display: block; */

  margin-right: 30px;
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  /* top: 50px;
  right: 50px; */
  bottom: 50px;
  right: 50px;
}

/* pseudo class utiliza : (dois pontos) e pseudo elemento utiliza :: (dois pontos, dois pontos) */

h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

/* Pseudo elemento */

/* p::first-line {
  color: yellowgreen;
} */

/* Seletor de irmão adjacente  */

/* h3 + p::first-line {
  color: yellowgreen;
} */

h2 {
  /* background-color: orange; */
  position: relative;
}

h2::after {
  content: "TOP" ;
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}

/* 
h2::before {
  content: "Left";
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  left: -50px;
} */

/* #copyright {
  color: blue;
}

.copyright {
  color: red;
}

.text {
  color: yellow;
}

footer p {
  color: green !important;
} */

/* FLOATS */

/* .author-img {
  float: left;
  margin-bottom: 20px;
}

.author {
  padding-left: 80px;
  margin-left: 20px;
  margin-top: 10px;
  float: left;
}

h1 {
  float: left;
}

nav {
  float: right;
}

.clear {
  clear: both;
}

.clearfix::after {
  clear: both;
  sempre ao utilizar after dever haver (content: "mesmo que seja vazio" e display: block 
  content: "";
  display: block;
}

article{
  width: 825px;
  float: left;
}

aside{
  width: 300px;
  float: right;
}

footer{
  clear: both;
} */

/* FLEX-BOX */

.main-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.author-box {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}

.author {
  margin-bottom: 0;
  margin-left: 15px;
}

.related-post {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 30px;
}

.related-author {
  margin-bottom: 0;
  font-size: 14px;
  font-weight: normal;
  font-style: italic;
}

.related-link:link {
  font-size: 17px;
  font-weight: bold;
  font-style: normal;
  margin-bottom: 5px;
  display: block;
}

/* FLEXBOX LAYOUT */

/* .row {
  display: flex;
  gap: 75px;
  align-items: flex-start;
  margin-bottom: 60px;
}

article {
  flex: 1;
  margin-bottom: 0;
}

aside {
    DEFAULTS (valores definidos por padrão)
    flex-grow: 0;
    flex-shrink: 1;
    flex-basis: auto; 
  flex: 0 0 300px;
} */

/* CSS GRID */

.container {
  display: grid;
  grid-template-columns: 1fr 300px;
  column-gap: 75px;
  row-gap: 60px;
  align-items: start;
}

.main-header {
  grid-column: 1 / -1;
}

footer {
  grid-column: 1 / -1;
}